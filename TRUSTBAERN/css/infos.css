.infos-container { 
  display: grid;/* Legt fest, dass das Element .infos-container ein CSS Grid-Container ist. Innerhalb dieses Containers können Inhalte (Kinder-Elemente) in einem Raster organisiert werden. */
  grid-template-columns: repeat(12, 1fr); /* Definiert die Spaltenstruktur des Grids: Das Grid hat 12 gleich breite Spalten 1fr steht für eine proportionale Einheit des verfügbaren Platzes (Fractional Unit). Alle 12 Spalten teilen sich den Platz gleichmäßig. wenn man individuell möchte, dann repeat weg und prozent zahlenb nacheinander mit Leerschlag . */
  grid-template-rows: auto;  /* Definiert die Reihenstruktur des Grids: Jede Zeile passt sich automatisch (auto) der Höhe ihres Inhalts an. */
  width: 100%;
  grid-column-gap: 3em; /* Legt den horizontalen Abstand (Zwischenraum) zwischen den Spalten des Grids auf */
  grid-row-gap: 5em;/* Legt den vertikalen Abstand (Zwischenraum) zwischen den Reihen des Grids auf 5em fest. */
  margin-bottom: 3em;/*  Fügt einen Abstand von 3em unterhalb des Containers hinzu. Dadurch entsteht ein Abstand zum nächsten Element unter dem .infos-container. */
}


.faq-section {
    grid-column: 1 / 9; /* Gibt an, dass das .faq-section-Element im übergeordneten Grid-Container die Spalten von 1 bis 9 belegt. */
    width: 100%; /* 100% der 1-9 Spalten */
    padding: 0; /* Kein Padding */
    margin-top: 0;/* Oben kein Margin */
}


.infos-container h1 {
    text-align: left; /* Richtet den Text des <h1>-Elements links aus. */
    vertical-align: top; /* Oben im Container */
    margin: 0  0 1.5em 0; /* auf jeder Seite, beginnend mit oben und dann im Uhrzeigersinn */
    padding: 0;
}

  .faq-item {
    list-style: none;  /* Standardmäßig würden <li>-Elemente Punkte oder andere Listensymbole anzeigen. */
    margin-bottom: 15px; 
  }
 
 
  .faq-question {
    padding: 10px 15px;
    cursor: pointer;
    border-radius: 30px; /* Runder Rahmen */
    border: 1px solid #ffffff; /* Gelber Rand wie im Menü */
    color: white;
    font-size: 1.2em;
    position: relative;
    transition: color 0.3s, background-color 0.3s;
    text-align: left;
  }

  .faq-question:hover {
    color: #f4c542; /* Gelbe Schrift beim Hover */
  }

  .faq-question::after {
    content: '\25BC'; /* Pfeil nach unten */
    position: absolute;
    right: 15px;
    font-size: 1.2em;
    transition: transform 0.3s;
  }

  .faq-item.open .faq-question::after {
    transform: rotate(180deg); /* Pfeil dreht nach oben */
  }

  .faq-answer {
    display: none;
    border: 1px solid #ffffff; /* Gelber Rand */
    border-radius: 30px; /* Runder Rahmen */
    padding: 15px;
    color: white;
    font-size: 1em;
    margin-top: 5px;
    text-align: left;
  }

  .faq-item.open .faq-answer {
    display: block;
  }

  .helpline {
    margin-bottom: 30px;
    grid-column: 9 / 13;
    width: 100%;
    padding: 0;
    margin: 0;
  }

  .helpline-list {
    border: 1px solid #ffffff;
    border-radius: 30px;
    padding: 15px;
    color: white;
    font-size: 1.2em;
  }

  .helpline-list ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .helpline-list li {
    margin-bottom: 10px;
  }

  .helpline-list li a {
    color: var(--yellow);
    text-decoration: none;
  }

  .helpline-list li a:hover {
    text-decoration: underline;
  }

  .video-container {
    display: flex;
    flex-wrap: wrap;
    gap: 2em;
    margin: 0;
  }

  .video-container iframe {
    width: 100%;
    max-width: 400px;
    height: 15em;
    border-radius: 15px;
    border: 1px solid #ffffff;
  }

  .video-container iframe:hover {
    transform: scale(1.05);
    transition: transform 0.3s;
  }